version: '3.8'

services:
  app:
    build:
      dockerfile: Dockerfile
      context: .
      args:
        NODE_IMAGE: ${NODE_IMAGE}
        APP_PORT: ${APP_PORT}
    container_name: app-${APP_NAME}
    env_file:
      - .env
    ports:
      - 3000:${APP_PORT}
    volumes:
      - ./:/app
      - ./node_modules:/app/node_modules
    networks:
      - app_network
    depends_on:
      - mysql
      - redis

  mysql:
    image: ${MYSQL_IMAGE}
    container_name: mysql-${APP_NAME}
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - mysql-data:/var/lib/mysql
    ports:
      - 3306:${MYSQL_PORT}
    networks:
      - app_network

  redis:
    image: redis:alpine
    container_name: ${APP_NAME}-redis
    volumes:
      - redis-data:/data
    ports:
      - 6379:${REDIS_PORT}
    networks:
      - app_network
  
  nginx:
    image: nginx
    container_name: ${APP_NAME}-nginx
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/nginx/ssl

    ports:
      - "8080:80"
      - "443:443"
    networks:
      - app_network
    depends_on:
      - app

volumes:
  mysql-data:
  redis-data:

networks:
  app_network:
    name: app_network
